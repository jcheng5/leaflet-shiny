{"version":3,"file":"esri-leaflet-core.js","sources":["../../../src/EsriLeaflet.js","../../../src/Util.js","../../../src/Request.js","../../../src/Tasks/Task.js","../../../src/Services/Service.js"],"names":["EsriLeaflet","VERSION","Layers","Services","Controls","Tasks","Util","Support","CORS","window","XMLHttpRequest","pointerEvents","document","documentElement","style","L","esri","clone","obj","target","i","hasOwnProperty","pointsEqual","a","b","length","closeRing","coordinates","push","ringIsClockwise","ringToTest","pt2","total","rLength","pt1","vertexIntersectsVertex","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","arrayIntersectsArray","j","coordinatesContainPoint","point","contains","l","coordinatesContainCoordinates","outer","inner","intersects","convertRingsToGeoJSON","rings","x","outerRing","hole","outerRings","holes","r","ring","slice","polygon","uncontainedHoles","pop","contained","reverse","type","orientRings","poly","output","shift","flattenMultiPolygonRings","extentToBounds","extent","sw","LatLng","ymin","xmin","ne","ymax","xmax","LatLngBounds","boundsToExtent","bounds","latLngBounds","getSouthWest","lng","lat","getNorthEast","spatialReference","wkid","arcgisToGeojson","arcgis","idAttribute","geojson","y","points","paths","geometry","attributes","properties","id","OBJECTID","FID","geojsonToArcGIS","result","features","geometries","responseToFeatureCollection","response","objectIdField","objectIdFieldName","fields","name","featureCollection","results","cleanUrl","url","replace","geojsonTypeToArcGIS","geoJsonType","arcgisGeometryType","serialize","params","data","f","key","value","param","Object","prototype","toString","call","JSON","stringify","valueOf","encodeURIComponent","createRequest","callback","context","httpRequest","onerror","error","code","message","onreadystatechange","readyState","parse","responseText","e","callbacks","_EsriLeafletCallbacks","Request","request","paramString","requestLength","open","send","setRequestHeader","get","JSONP","console","warn","post","XMLHTTP","callbackId","script","DomUtil","create","body","src","responseType","abort","_callback","Task","Class","extend","options","proxy","useCors","generateSetter","isArray","match","bind","this","join","initialize","endpoint","_service","setters","setter","setOptions","token","authenticate","path","_request","method","Service","includes","Mixin","Events","_requestQueue","_authenticating","metadata","_runQueue","fire","wrappedCallback","_createServiceCallback","apply","service"],"mappings":"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","sourcesContent":["var EsriLeaflet = { //jshint ignore:line\n  VERSION: '1.0.0-rc.4',\n  Layers: {},\n  Services: {},\n  Controls: {},\n  Tasks: {},\n  Util: {},\n  Support: {\n    CORS: !!(window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest()),\n    pointerEvents: document.documentElement.style.pointerEvents === ''\n  }\n};\n\nif(typeof window !== 'undefined' && window.L){\n  window.L.esri = EsriLeaflet;\n}\n","(function(EsriLeaflet){\n\n  // shallow object clone for feature properties and attributes\n  // from http://jsperf.com/cloning-an-object/2\n  function clone(obj) {\n    var target = {};\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        target[i] = obj[i];\n      }\n    }\n    return target;\n  }\n\n  // checks if 2 x,y points are equal\n  function pointsEqual(a, b) {\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // checks if the first and last points of a ring are equal and closes the ring\n  function closeRing(coordinates) {\n    if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n      coordinates.push(coordinates[0]);\n    }\n    return coordinates;\n  }\n\n  // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n  // or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n  // points-are-in-clockwise-order\n  function ringIsClockwise(ringToTest) {\n    var total = 0,i = 0;\n    var rLength = ringToTest.length;\n    var pt1 = ringToTest[i];\n    var pt2;\n    for (i; i < rLength - 1; i++) {\n      pt2 = ringToTest[i + 1];\n      total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n      pt1 = pt2;\n    }\n    return (total >= 0);\n  }\n\n  // ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L504-L519\n  function vertexIntersectsVertex(a1, a2, b1, b2) {\n    var uaT = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n    var ubT = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n    var uB  = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n    if ( uB !== 0 ) {\n      var ua = uaT / uB;\n      var ub = ubT / uB;\n\n      if ( 0 <= ua && ua <= 1 && 0 <= ub && ub <= 1 ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L521-L531\n  function arrayIntersectsArray(a, b) {\n    for (var i = 0; i < a.length - 1; i++) {\n      for (var j = 0; j < b.length - 1; j++) {\n        if (vertexIntersectsVertex(a[i], a[i + 1], b[j], b[j + 1])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  // ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L470-L480\n  function coordinatesContainPoint(coordinates, point) {\n    var contains = false;\n    for(var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n      if (((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1]) ||\n           (coordinates[j][1] <= point[1] && point[1] < coordinates[i][1])) &&\n          (point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0])) {\n        contains = !contains;\n      }\n    }\n    return contains;\n  }\n\n  // ported from terraformer-arcgis-parser.js https://github.com/Esri/terraformer-arcgis-parser/blob/master/terraformer-arcgis-parser.js#L106-L113\n  function coordinatesContainCoordinates(outer, inner){\n    var intersects = arrayIntersectsArray(outer, inner);\n    var contains = coordinatesContainPoint(outer, inner[0]);\n    if(!intersects && contains){\n      return true;\n    }\n    return false;\n  }\n\n  // do any polygons in this array contain any other polygons in this array?\n  // used for checking for holes in arcgis rings\n  // ported from terraformer-arcgis-parser.js https://github.com/Esri/terraformer-arcgis-parser/blob/master/terraformer-arcgis-parser.js#L117-L172\n  function convertRingsToGeoJSON(rings){\n    var outerRings = [];\n    var holes = [];\n    var x; // iterator\n    var outerRing; // current outer ring being evaluated\n    var hole; // current hole being evaluated\n\n    // for each ring\n    for (var r = 0; r < rings.length; r++) {\n      var ring = closeRing(rings[r].slice(0));\n      if(ring.length < 4){\n        continue;\n      }\n      // is this ring an outer ring? is it clockwise?\n      if(ringIsClockwise(ring)){\n        var polygon = [ ring ];\n        outerRings.push(polygon); // push to outer rings\n      } else {\n        holes.push(ring); // counterclockwise push to holes\n      }\n    }\n\n    var uncontainedHoles = [];\n\n    // while there are holes left...\n    while(holes.length){\n      // pop a hole off out stack\n      hole = holes.pop();\n\n      // loop over all outer rings and see if they contain our hole.\n      var contained = false;\n      for (x = outerRings.length - 1; x >= 0; x--) {\n        outerRing = outerRings[x][0];\n        if(coordinatesContainCoordinates(outerRing, hole)){\n          // the hole is contained push it into our polygon\n          outerRings[x].push(hole);\n          contained = true;\n          break;\n        }\n      }\n\n      // ring is not contained in any outer ring\n      // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n      if(!contained){\n        uncontainedHoles.push(hole);\n      }\n    }\n\n    // if we couldn't match any holes using contains we can try intersects...\n    while(uncontainedHoles.length){\n      // pop a hole off out stack\n      hole = uncontainedHoles.pop();\n\n      // loop over all outer rings and see if any intersect our hole.\n      var intersects = false;\n      for (x = outerRings.length - 1; x >= 0; x--) {\n        outerRing = outerRings[x][0];\n        if(arrayIntersectsArray(outerRing, hole)){\n          // the hole is contained push it into our polygon\n          outerRings[x].push(hole);\n          intersects = true;\n          break;\n        }\n      }\n\n      if(!intersects) {\n        outerRings.push([hole.reverse()]);\n      }\n    }\n\n    if(outerRings.length === 1){\n      return {\n        type: 'Polygon',\n        coordinates: outerRings[0]\n      };\n    } else {\n      return {\n        type: 'MultiPolygon',\n        coordinates: outerRings\n      };\n    }\n  }\n\n  // This function ensures that rings are oriented in the right directions\n  // outer rings are clockwise, holes are counterclockwise\n  // used for converting GeoJSON Polygons to ArcGIS Polygons\n  function orientRings(poly){\n    var output = [];\n    var polygon = poly.slice(0);\n    var outerRing = closeRing(polygon.shift().slice(0));\n    if(outerRing.length >= 4){\n      if(!ringIsClockwise(outerRing)){\n        outerRing.reverse();\n      }\n\n      output.push(outerRing);\n\n      for (var i = 0; i < polygon.length; i++) {\n        var hole = closeRing(polygon[i].slice(0));\n        if(hole.length >= 4){\n          if(ringIsClockwise(hole)){\n            hole.reverse();\n          }\n          output.push(hole);\n        }\n      }\n    }\n\n    return output;\n  }\n\n  // This function flattens holes in multipolygons to one array of polygons\n  // used for converting GeoJSON Polygons to ArcGIS Polygons\n  function flattenMultiPolygonRings(rings){\n    var output = [];\n    for (var i = 0; i < rings.length; i++) {\n      var polygon = orientRings(rings[i]);\n      for (var x = polygon.length - 1; x >= 0; x--) {\n        var ring = polygon[x].slice(0);\n        output.push(ring);\n      }\n    }\n    return output;\n  }\n\n  // convert an extent (ArcGIS) to LatLngBounds (Leaflet)\n  EsriLeaflet.Util.extentToBounds = function(extent){\n    var sw = new L.LatLng(extent.ymin, extent.xmin);\n    var ne = new L.LatLng(extent.ymax, extent.xmax);\n    return new L.LatLngBounds(sw, ne);\n  };\n\n  // convert an LatLngBounds (Leaflet) to extent (ArcGIS)\n  EsriLeaflet.Util.boundsToExtent = function(bounds) {\n    bounds = L.latLngBounds(bounds);\n    return {\n      'xmin': bounds.getSouthWest().lng,\n      'ymin': bounds.getSouthWest().lat,\n      'xmax': bounds.getNorthEast().lng,\n      'ymax': bounds.getNorthEast().lat,\n      'spatialReference': {\n        'wkid' : 4326\n      }\n    };\n  };\n\n  EsriLeaflet.Util.arcgisToGeojson = function (arcgis, idAttribute){\n    var geojson = {};\n\n    if(typeof arcgis.x === 'number' && typeof arcgis.y === 'number'){\n      geojson.type = 'Point';\n      geojson.coordinates = [arcgis.x, arcgis.y];\n    }\n\n    if(arcgis.points){\n      geojson.type = 'MultiPoint';\n      geojson.coordinates = arcgis.points.slice(0);\n    }\n\n    if(arcgis.paths) {\n      if(arcgis.paths.length === 1){\n        geojson.type = 'LineString';\n        geojson.coordinates = arcgis.paths[0].slice(0);\n      } else {\n        geojson.type = 'MultiLineString';\n        geojson.coordinates = arcgis.paths.slice(0);\n      }\n    }\n\n    if(arcgis.rings) {\n      geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n    }\n\n    if(arcgis.geometry || arcgis.attributes) {\n      geojson.type = 'Feature';\n      geojson.geometry = (arcgis.geometry) ? EsriLeaflet.Util.arcgisToGeojson(arcgis.geometry) : null;\n      geojson.properties = (arcgis.attributes) ? clone(arcgis.attributes) : null;\n      if(arcgis.attributes) {\n        geojson.id =  arcgis.attributes[idAttribute] || arcgis.attributes.OBJECTID || arcgis.attributes.FID;\n      }\n    }\n\n    return geojson;\n  };\n\n  // GeoJSON -> ArcGIS\n  EsriLeaflet.Util.geojsonToArcGIS = function(geojson, idAttribute){\n    idAttribute = idAttribute || 'OBJECTID';\n    var spatialReference = { wkid: 4326 };\n    var result = {};\n    var i;\n\n    switch(geojson.type){\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case 'Feature':\n      if(geojson.geometry) {\n        result.geometry = EsriLeaflet.Util.geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n      result.attributes = (geojson.properties) ? clone(geojson.properties) : {};\n      if(geojson.id){\n        result.attributes[idAttribute] = geojson.id;\n      }\n      break;\n    case 'FeatureCollection':\n      result = [];\n      for (i = 0; i < geojson.features.length; i++){\n        result.push(EsriLeaflet.Util.geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n      break;\n    case 'GeometryCollection':\n      result = [];\n      for (i = 0; i < geojson.geometries.length; i++){\n        result.push(EsriLeaflet.Util.geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n      break;\n    }\n\n    return result;\n  };\n\n  EsriLeaflet.Util.responseToFeatureCollection = function(response, idAttribute){\n    var objectIdField;\n\n    if(idAttribute){\n      objectIdField = idAttribute;\n    } else if(response.objectIdFieldName){\n      objectIdField = response.objectIdFieldName;\n    } else if(response.fields) {\n      for (var j = 0; j <= response.fields.length - 1; j++) {\n        if(response.fields[j].type === 'esriFieldTypeOID') {\n          objectIdField = response.fields[j].name;\n          break;\n        }\n      }\n    } else {\n      objectIdField = 'OBJECTID';\n    }\n\n    var featureCollection = {\n      type: 'FeatureCollection',\n      features: []\n    };\n    var features = response.features || response.results;\n    if(features.length){\n      for (var i = features.length - 1; i >= 0; i--) {\n        featureCollection.features.push(EsriLeaflet.Util.arcgisToGeojson(features[i], objectIdField));\n      }\n    }\n\n    return featureCollection;\n  };\n\n    // trim whitespace and add a tailing slash is needed to a url\n  EsriLeaflet.Util.cleanUrl = function(url){\n    url = url.replace(/\\s\\s*/g, '');\n\n    //add a trailing slash to the url if the user omitted it\n    if(url[url.length-1] !== '/'){\n      url += '/';\n    }\n\n    return url;\n  };\n\n  EsriLeaflet.Util.geojsonTypeToArcGIS = function (geoJsonType) {\n    var arcgisGeometryType;\n    switch (geoJsonType) {\n    case 'Point':\n      arcgisGeometryType = 'esriGeometryPoint';\n      break;\n    case 'MultiPoint':\n      arcgisGeometryType = 'esriGeometryMultipoint';\n      break;\n    case 'LineString':\n      arcgisGeometryType = 'esriGeometryPolyline';\n      break;\n    case 'MultiLineString':\n      arcgisGeometryType = 'esriGeometryPolyline';\n      break;\n    case 'Polygon':\n      arcgisGeometryType = 'esriGeometryPolygon';\n      break;\n    case 'MultiPolygon':\n      arcgisGeometryType = 'esriGeometryPolygon';\n      break;\n    }\n    return arcgisGeometryType;\n  };\n\n})(EsriLeaflet);","(function(EsriLeaflet){\n\n  var callbacks = 0;\n\n  window._EsriLeafletCallbacks = {};\n\n  function serialize(params){\n    var data = '';\n\n    params.f = 'json';\n\n    for (var key in params){\n      if(params.hasOwnProperty(key)){\n        var param = params[key];\n        var type = Object.prototype.toString.call(param);\n        var value;\n\n        if(data.length){\n          data += '&';\n        }\n\n        if(type === '[object Array]' || type === '[object Object]'){\n          value = JSON.stringify(param);\n        } else if (type === '[object Date]'){\n          value = param.valueOf();\n        } else {\n          value = param;\n        }\n\n        data += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n      }\n    }\n\n    return data;\n  }\n\n  function createRequest(callback, context){\n    var httpRequest = new XMLHttpRequest();\n\n    httpRequest.onerror = function(e) {\n      callback.call(context, {\n        error: {\n          code: 500,\n          message: 'XMLHttpRequest error'\n        }\n      }, null);\n    };\n\n    httpRequest.onreadystatechange = function(){\n      var response;\n      var error;\n\n      if (httpRequest.readyState === 4) {\n        try {\n          response = JSON.parse(httpRequest.responseText);\n        } catch(e) {\n          response = null;\n          error = {\n            code: 500,\n            message: 'Could not parse response as JSON.'\n          };\n        }\n\n        if (!error && response.error) {\n          error = response.error;\n          response = null;\n        }\n\n        callback.call(context, error, response);\n      }\n    };\n\n    return httpRequest;\n  }\n\n  // AJAX handlers for CORS (modern browsers) or JSONP (older browsers)\n  EsriLeaflet.Request = {\n    request: function(url, params, callback, context){\n      var paramString = serialize(params);\n      var httpRequest = createRequest(callback, context);\n      var requestLength = (url + '?' + paramString).length;\n\n      // request is less then 2000 characters and the browser supports CORS, make GET request with XMLHttpRequest\n      if(requestLength <= 2000 && L.esri.Support.CORS){\n        httpRequest.open('GET', url + '?' + paramString);\n        httpRequest.send(null);\n\n      // request is less more then 2000 characters and the browser supports CORS, make POST request with XMLHttpRequest\n      } else if (requestLength > 2000 && L.esri.Support.CORS){\n        httpRequest.open('POST', url);\n        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        httpRequest.send(paramString);\n\n      // request is less more then 2000 characters and the browser does not support CORS, make a JSONP request\n      } else if(requestLength <= 2000 && !L.esri.Support.CORS){\n        return L.esri.Request.get.JSONP(url, params, callback, context);\n\n      // request is longer then 2000 characters and the browser does not support CORS, log a warning\n      } else {\n        if(console && console.warn){\n          console.warn('a request to ' + url + ' was longer then 2000 characters and this browser cannot make a cross-domain post request. Please use a proxy http://esri.github.io/esri-leaflet/api-reference/request.html');\n          return;\n        }\n      }\n\n      return httpRequest;\n    },\n    post: {\n      XMLHTTP: function (url, params, callback, context) {\n        var httpRequest = createRequest(callback, context);\n        httpRequest.open('POST', url);\n        httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        httpRequest.send(serialize(params));\n\n        return httpRequest;\n      }\n    },\n\n    get: {\n      CORS: function (url, params, callback, context) {\n        var httpRequest = createRequest(callback, context);\n\n        httpRequest.open('GET', url + '?' + serialize(params), true);\n        httpRequest.send(null);\n\n        return httpRequest;\n      },\n      JSONP: function(url, params, callback, context){\n        var callbackId = 'c' + callbacks;\n\n        params.callback = 'window._EsriLeafletCallbacks.' + callbackId;\n\n        var script = L.DomUtil.create('script', null, document.body);\n        script.type = 'text/javascript';\n        script.src = url + '?' +  serialize(params);\n        script.id = callbackId;\n\n        window._EsriLeafletCallbacks[callbackId] = function(response){\n          if(window._EsriLeafletCallbacks[callbackId] !== true){\n            var error;\n            var responseType = Object.prototype.toString.call(response);\n\n            if(!(responseType === '[object Object]' || responseType === '[object Array]')){\n              error = {\n                error: {\n                  code: 500,\n                  message: 'Expected array or object as JSONP response'\n                }\n              };\n              response = null;\n            }\n\n            if (!error && response.error) {\n              error = response;\n              response = null;\n            }\n\n            callback.call(context, error, response);\n            window._EsriLeafletCallbacks[callbackId] = true;\n          }\n        };\n\n        callbacks++;\n\n        return {\n          id: callbackId,\n          url: script.src,\n          abort: function(){\n            window._EsriLeafletCallbacks._callback[callbackId]({\n              code: 0,\n              message: 'Request aborted.'\n            });\n          }\n        };\n      }\n    }\n  };\n\n  // Choose the correct AJAX handler depending on CORS support\n  EsriLeaflet.get = (EsriLeaflet.Support.CORS) ? EsriLeaflet.Request.get.CORS : EsriLeaflet.Request.get.JSONP;\n\n  // Always use XMLHttpRequest for posts\n  EsriLeaflet.post = EsriLeaflet.Request.post.XMLHTTP;\n\n  // expose a common request method the uses GET\\POST based on request length\n  EsriLeaflet.request = EsriLeaflet.Request.request;\n\n})(EsriLeaflet);","EsriLeaflet.Tasks.Task = L.Class.extend({\n\n  options: {\n    proxy: false,\n    useCors: EsriLeaflet.Support.CORS\n  },\n\n  //Generate a method for each methodName:paramName in the setters for this task.\n  generateSetter: function(param, context){\n    var isArray = param.match(/([a-zA-Z]+)\\[\\]/);\n\n    param = (isArray) ? isArray[1] : param;\n\n    if(isArray){\n      return L.Util.bind(function(value){\n        // this.params[param] = (this.params[param]) ? this.params[param] + ',' : '';\n        if (L.Util.isArray(value)) {\n          this.params[param] = value.join(',');\n        } else {\n          this.params[param] = value;\n        }\n        return this;\n      }, context);\n    } else {\n      return L.Util.bind(function(value){\n        this.params[param] = value;\n        return this;\n      }, context);\n    }\n  },\n\n  initialize: function(endpoint, options){\n    // endpoint can be either a url to an ArcGIS Rest Service or an instance of EsriLeaflet.Service\n    if(endpoint.url && endpoint.request){\n      this._service = endpoint;\n      this.url = endpoint.url;\n    } else {\n      this.url = EsriLeaflet.Util.cleanUrl(endpoint);\n    }\n\n    // clone default params into this object\n    this.params = L.Util.extend({}, this.params || {});\n\n    // generate setter methods based on the setters object implimented a child class\n    if(this.setters){\n      for (var setter in this.setters){\n        var param = this.setters[setter];\n        this[setter] = this.generateSetter(param, this);\n      }\n    }\n\n    L.Util.setOptions(this, options);\n  },\n\n  token: function(token){\n    if(this._service){\n      this._service.authenticate(token);\n    } else {\n      this.params.token = token;\n    }\n    return this;\n  },\n\n  request: function(callback, context){\n    if(this._service){\n      return this._service.request(this.path, this.params, callback, context);\n    } else {\n      return this._request('request', this.path, this.params, callback, context);\n    }\n  },\n\n  _request: function(method, path, params, callback, context){\n    var url = (this.options.proxy) ? this.options.proxy + '?' + this.url + path : this.url + path;\n    if((method === 'get' || method === 'request') && !this.options.useCors){\n      return EsriLeaflet.Request.get.JSONP(url, params, callback, context);\n    } else{\n      return EsriLeaflet[method](url, params, callback, context);\n    }\n  }\n});","EsriLeaflet.Services.Service = L.Class.extend({\n\n  includes: L.Mixin.Events,\n\n  options: {\n    proxy: false,\n    useCors: EsriLeaflet.Support.CORS\n  },\n\n  initialize: function (url, options) {\n    this.url = EsriLeaflet.Util.cleanUrl(url);\n    this._requestQueue = [];\n    this._authenticating = false;\n    L.Util.setOptions(this, options);\n  },\n\n  get: function (path, params, callback, context) {\n    return this._request('get', path, params, callback, context);\n  },\n\n  post: function (path, params, callback, context) {\n    return this._request('post', path, params, callback, context);\n  },\n\n  request: function (path, params, callback, context) {\n    return this._request('request', path, params, callback, context);\n  },\n\n  metadata: function (callback, context) {\n    return this._request('get', '', {}, callback, context);\n  },\n\n  authenticate: function(token){\n    this._authenticating = false;\n    this.options.token = token;\n    this._runQueue();\n    return this;\n  },\n\n  _request: function(method, path, params, callback, context){\n    this.fire('requeststart', {\n      url: this.url + path,\n      params: params,\n      method: method\n    });\n\n    var wrappedCallback = this._createServiceCallback(method, path, params, callback, context);\n\n    if (this.options.token) {\n      params.token = this.options.token;\n    }\n\n    if (this._authenticating) {\n      this._requestQueue.push([method, path, params, callback, context]);\n      return;\n    } else {\n      var url = (this.options.proxy) ? this.options.proxy + '?' + this.url + path : this.url + path;\n\n      if((method === 'get' || method === 'request') && !this.options.useCors){\n        return EsriLeaflet.Request.get.JSONP(url, params, wrappedCallback);\n      } else {\n        return EsriLeaflet[method](url, params, wrappedCallback);\n      }\n    }\n  },\n\n  _createServiceCallback: function(method, path, params, callback, context){\n    var request = [method, path, params, callback, context];\n\n    return L.Util.bind(function(error, response){\n\n      if (error && (error.code === 499 || error.code === 498)) {\n        this._authenticating = true;\n\n        this._requestQueue.push(request);\n\n        this.fire('authenticationrequired', {\n          authenticate: L.Util.bind(this.authenticate, this)\n        });\n      } else {\n        callback.call(context, error, response);\n\n        if(error) {\n          this.fire('requesterror', {\n            url: this.url + path,\n            params: params,\n            message: error.message,\n            code: error.code,\n            method: method\n          });\n        } else {\n          this.fire('requestsuccess', {\n            url: this.url + path,\n            params: params,\n            response: response,\n            method: method\n          });\n        }\n\n        this.fire('requestend', {\n          url: this.url + path,\n          params: params,\n          method: method\n        });\n      }\n    }, this);\n  },\n\n  _runQueue: function(){\n    for (var i = this._requestQueue.length - 1; i >= 0; i--) {\n      var request = this._requestQueue[i];\n      var method = request.shift();\n      this[method].apply(this, request);\n    }\n    this._requestQueue = [];\n  }\n\n});\n\nEsriLeaflet.Services.service = function(url, params){\n  return new EsriLeaflet.Services.Service(url, params);\n};"]}